<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Web | WangChang's Blog]]></title>
  <link href="http://wangchang.github.com/blog/categories/web/atom.xml" rel="self"/>
  <link href="http://wangchang.github.com/"/>
  <updated>2012-12-11T14:10:26+08:00</updated>
  <id>http://wangchang.github.com/</id>
  <author>
    <name><![CDATA[Wang Chang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Python.Paste指南之Deploy(2)-实践]]></title>
    <link href="http://wangchang.github.com/blog/2012/11/python-paste-one-deploy-2/"/>
    <updated>2012-11-20T10:39:00+08:00</updated>
    <id>http://wangchang.github.com/blog/2012/11/python-paste-one-deploy-2</id>
    <content type="html"><![CDATA[<p>上一节中梳理了Python Paste中Deploy机制的概念，这一节就做一点小小的实践。首先，我们举一个使用了Deploy的例子，这个就是OpenStack的Quantum组件的WSGI部分。我们先来看关于WSGI部分的配置文件，以ini后缀，那么就是api-paste.ini文件，决定了API的处理流程。我加入了适当的注释。</p>

<!--more-->


<h2>1 OpenStack Quantum配置文件api-paste.ini</h2>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>- awesome.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;[composite:quantum]</span>
</span><span class='line'><span class="sr">use = egg:Paste#urlmap</span>
</span><span class='line'><span class="sr">/</span><span class="p">:</span> <span class="n">quantumversions</span>
</span><span class='line'><span class="sr">/v2.0: quantumapi_v2_0&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="err">使用</span><span class="n">composite</span><span class="err">分解机制，</span><span class="n">composite</span><span class="err">使用了</span><span class="n">usrlmap</span><span class="err">，</span><span class="n">xxxxx</span><span class="o">/</span><span class="n">xxx</span><span class="err">的</span><span class="no">API</span><span class="err">交给</span><span class="n">quantumversions</span><span class="err">处理。</span><span class="n">xxxx</span><span class="o">/</span><span class="n">v2</span><span class="o">.</span><span class="mi">0</span><span class="o">/</span><span class="n">xxxx</span><span class="err">的</span><span class="no">API</span><span class="err">交给</span><span class="n">quantumapi_v2_0</span><span class="err">处理。</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;[composite:quantumapi_v2_0]</span>
</span><span class='line'><span class="sr">use = call:quantum.auth:pipeline_factory</span>
</span><span class='line'><span class="sr">noauth = extensions quantumapiapp_v2_0</span>
</span><span class='line'><span class="sr">keystone = authtoken keystonecontext extensions quantumapiapp_v2_0&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">quantumapi_v2_0</span><span class="err">依然是一个分解组件，使用了</span><span class="n">quantum</span><span class="o">.</span><span class="n">auth</span><span class="err">模块下的</span><span class="n">pipeline_factory</span><span class="err">，对于这个</span><span class="n">factory</span><span class="err">，传递了两个参数，一个是</span><span class="n">noauth</span><span class="p">,</span><span class="err">一个是</span><span class="n">keystone</span><span class="err">。</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;[filter:keystonecontext]</span>
</span><span class='line'><span class="sr">paste.filter_factory = quantum.auth:QuantumKeystoneContext.factory&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="err">对于</span><span class="n">keystonecontext</span><span class="err">，实际上是一个过滤器，使用了</span><span class="n">quantum</span><span class="o">.</span><span class="n">auth</span><span class="err">模块下的类</span><span class="no">QuantumKeystoneContext</span><span class="err">的</span><span class="n">factory</span><span class="err">函数</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;[filter:authtoken]</span>
</span><span class='line'><span class="sr">paste.filter_factory = keystone.middleware.auth_token:filter_factory</span>
</span><span class='line'><span class="sr">auth_host = 127.0.0.1</span>
</span><span class='line'><span class="sr">auth_port = 35357</span>
</span><span class='line'><span class="sr">auth_protocol = http</span>
</span><span class='line'><span class="sr">admin_tenant_name = %SERVICE_TENANT_NAME%</span>
</span><span class='line'><span class="sr">admin_user = %SERVICE_USER%</span>
</span><span class='line'><span class="sr">admin_password = %SERVICE_PASSWORD%&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="err">定义了另外一个</span><span class="n">filter</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;[filter:extensions]</span>
</span><span class='line'><span class="sr">paste.filter_factory = quantum.extensions.extensions:plugin_aware_extension_middleware_factory&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="err">定义了另外一个</span><span class="n">filter</span><span class="p">,</span><span class="err">这个</span><span class="n">filter</span><span class="err">是为了支持扩展</span><span class="n">quantum</span> <span class="n">api</span><span class="err">的</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;[app:quantumversions]</span>
</span><span class='line'><span class="sr">paste.app_factory = quantum.api.versions:Versions.factory&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="err">核心的</span><span class="n">app</span><span class="err">部分，使用工厂函数，将</span><span class="n">app</span><span class="err">指向</span><span class="n">python</span><span class="err">代码。</span><span class="n">app_factory</span><span class="err">表明这个函数接收一系列参数，</span><span class="o">[</span><span class="no">DEFAULET</span><span class="o">]</span><span class="err">以及</span><span class="o">[</span><span class="n">app</span><span class="p">:</span><span class="o">]</span><span class="err">下面的，本部分本</span><span class="n">section</span><span class="err">没有参数，并返回一个函数对象。</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;[app:quantumapiapp_v2_0]</span>
</span><span class='line'><span class="sr">paste.app_factory = quantum.api.v2.router:APIRouter.factory&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="err">同上</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>我们来总结一下，整个Quantum处理api的流程如下,其中，强调的部分为函数代码，其他为配置文件中的section部分。</p>

<p>对于路径为<code>/</code>类的API----quantumversions处理----调用<code>quantum.api.versions:Version</code>类的<code>factory函数</code>处理。</p>

<p>对于路径为<code>/2.0</code>类的API----quantumapi_v2_0处理----调用<code>quantum.auth</code>中的<code>pipeline_factory</code>处理,同时传递了两个参数noauth和keystone,类型为字典。
这个pipeline_factory中会读取另外一个变量CONF.auth（来自另外一个配置文件，不考虑），选择采用的认证方式，然后选择noauth或者keystone，并读取参数的值。
那么，就有两种情况：</p>

<p>noauth: 应用将会先经过extensions这个filter处理----调用了<code>quantum.extensions.extensions:plugin_aware_extension_middleware_factory</code>，用来处理扩展api请求，这是第一次包装----quantumapiapp_v2_0，这才是实际的WSGI应用，调用了<code>quantum.api.v2.router:APIRouter.factory</code>，并处理返回结果。</p>

<p>keystone：和上面类似，不同的是多了几个filter,authtoken keystonecontext extensions quantumapiapp_v2_0,并且在每个filter中可能还会有参数传递给这个fliter。</p>

<p>总的来说，通过pipeline装载多个filter,将最基本的app--APIRouter，层层包装，使其变为一个具有处理认证，扩展API等的应用（逻辑上看），filter的好处就是可以自定义，比如可以不要认证功能，这比写一个囊括全部功能的应用明显要好的多。</p>

<h2>2 代码实践</h2>

<h3>2.1 配置文件</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'><figcaption><span>- awesome.rb </span></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="o">[</span><span class="no">DEFAULT</span><span class="o">]</span>
</span><span class='line'><span class="n">company</span> <span class="o">=</span> <span class="no">UESTC</span>
</span><span class='line'><span class="n">school</span> <span class="o">=</span> <span class="no">Commuication</span> <span class="ow">and</span> <span class="no">Information</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;[composite:common]</span>
</span><span class='line'><span class="sr">use = egg:Paste#urlmap</span>
</span><span class='line'><span class="sr">/</span><span class="ss">:showversion</span>
</span><span class='line'><span class="sr">/detail:showdetail&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;[</span><span class="n">pipeline</span><span class="ss">:showdetail</span><span class="o">]</span>
</span><span class='line'><span class="n">pipeline</span> <span class="o">=</span> <span class="n">filter1</span> <span class="n">filter2</span> <span class="n">showstudetail</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;[filter:filter1]&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="n">filter1</span> <span class="n">deal</span> <span class="n">with</span> <span class="n">auth</span><span class="p">,</span><span class="n">read</span> <span class="n">args</span> <span class="n">below</span><span class="o">&lt;</span><span class="sr">/h1&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;paste.filter_factory = python_paste:AuthFilter.factory</span>
</span><span class='line'><span class="sr">user = admin</span>
</span><span class='line'><span class="sr">passwd = admin&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;[</span><span class="n">filter</span><span class="ss">:filter2</span><span class="o">]&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;filter2 deal with time,read args below&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">paste</span><span class="o">.</span><span class="n">filter_factory</span> <span class="o">=</span> <span class="n">python_paste</span><span class="ss">:LogFilter</span><span class="o">.</span><span class="n">factory</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;h1&gt;all value is string&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;</span><span class="n">date</span> <span class="o">=</span> <span class="mi">20121120</span><span class="o">&lt;</span><span class="sr">/p&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="sr">&lt;p&gt;[app:showstudetail]</span>
</span><span class='line'><span class="sr">name = wangchang</span>
</span><span class='line'><span class="sr">age = 23</span>
</span><span class='line'><span class="sr">paste.app_factory = python_paste:ShowStuDetail.factory&lt;/</span><span class="nb">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="nb">p</span><span class="o">&gt;[</span><span class="n">app</span><span class="ss">:showversion</span><span class="o">]</span>
</span><span class='line'><span class="n">version</span> <span class="o">=</span> <span class="mi">1</span><span class="o">.</span><span class="mi">0</span><span class="o">.</span><span class="mi">0</span>
</span><span class='line'><span class="n">paste</span><span class="o">.</span><span class="n">app_factory</span> <span class="o">=</span> <span class="n">python_paste</span><span class="ss">:ShowVersion</span><span class="o">.</span><span class="n">factory</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>
从配置文件可以看出，这个程序会有如下操作：
*对于http://localhost/的访问，会调用showversion这个应用，应用读取ini文件中的version值并返回。__注意，在ini中的所有值都是字符串。</p>

<p>对于http://localhost/detail的访问，会先经过filter1以及filter2，这两个filter分别处理认证和LOG信息，他们会读取ini配置中的用户信息以及时间。最后才是交给showstudetail处理，showstudetail会读取ini中的用户信息并返回。__注意，使用多个filter的时候需要使用pipeline方式。</p>

<h3>2.2 代码</h3>

<p><div class='bogus-wrapper'><notextile><figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
<span class='line-number'>121</span>
<span class='line-number'>122</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">os</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">webob</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">webob</span> <span class="kn">import</span> <span class="n">Request</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">webob</span> <span class="kn">import</span> <span class="n">Response</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h1</span><span class="o">&gt;</span><span class="kn">from</span> <span class="nn">webob</span> <span class="kn">import</span> <span class="n">environ</span><span class="o">&lt;/</span><span class="n">h1</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="kn">from</span> <span class="nn">paste.deploy</span> <span class="kn">import</span> <span class="n">loadapp</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">wsgiref.simple_server</span> <span class="kn">import</span> <span class="n">make_server</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">pprint</span> <span class="kn">import</span> <span class="n">pprint</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">class</span> <span class="nc">AuthFilter</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>  <span class="s">&#39;&#39;&#39;filter1,auth</span>
</span><span class='line'><span class="s">     1.factory read args and print,return self instance</span>
</span><span class='line'><span class="s">     2.call method return app</span>
</span><span class='line'><span class="s">     3.AuthFilter(app)</span>
</span><span class='line'><span class="s">  &#39;&#39;&#39;</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">app</span><span class="p">):</span>
</span><span class='line'>      <span class="bp">self</span><span class="o">.</span><span class="n">app</span> <span class="o">=</span> <span class="n">app</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">__call__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">environ</span><span class="p">,</span><span class="n">start_response</span><span class="p">):</span>
</span><span class='line'>      <span class="k">print</span> <span class="s">&#39;this is Auth call filter1&#39;</span>
</span><span class='line'>      <span class="c">#pass environ and start_response to app</span>
</span><span class='line'>      <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">app</span><span class="p">(</span><span class="n">environ</span><span class="p">,</span><span class="n">start_response</span><span class="p">)</span>
</span><span class='line'>  <span class="nd">@classmethod</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">factory</span><span class="p">(</span><span class="n">cls</span><span class="p">,</span><span class="n">global_conf</span><span class="p">,</span><span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
</span><span class='line'>      <span class="sd">&#39;&#39;&#39;global_conf and kwargs are dict&#39;&#39;&#39;</span>
</span><span class='line'>      <span class="k">print</span> <span class="s">&#39;######filter1##########&#39;</span>
</span><span class='line'>      <span class="k">print</span> <span class="s">&#39;global_conf type:&#39;</span><span class="p">,</span><span class="nb">type</span><span class="p">(</span><span class="n">global_conf</span><span class="p">)</span>
</span><span class='line'>      <span class="k">print</span> <span class="s">&#39;[DEFAULT]&#39;</span><span class="p">,</span><span class="n">global_conf</span>
</span><span class='line'>      <span class="k">print</span> <span class="s">&#39;kwargs type:&#39;</span><span class="p">,</span><span class="nb">type</span><span class="p">(</span><span class="n">kwargs</span><span class="p">)</span>
</span><span class='line'>      <span class="k">print</span> <span class="s">&#39;Auth Info&#39;</span><span class="p">,</span><span class="n">kwargs</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">AuthFilter</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">class</span> <span class="nc">LogFilter</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>  <span class="s">&#39;&#39;&#39;</span>
</span><span class='line'><span class="s">  filter2,Log</span>
</span><span class='line'><span class="s">  &#39;&#39;&#39;</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">app</span><span class="p">):</span>
</span><span class='line'>      <span class="bp">self</span><span class="o">.</span><span class="n">app</span> <span class="o">=</span> <span class="n">app</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">__call__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">environ</span><span class="p">,</span><span class="n">start_response</span><span class="p">):</span>
</span><span class='line'>      <span class="k">print</span> <span class="s">&#39;This is call LogFilter filter2&#39;</span>
</span><span class='line'>      <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">app</span><span class="p">(</span><span class="n">environ</span><span class="p">,</span><span class="n">start_response</span><span class="p">)</span>
</span><span class='line'>  <span class="nd">@classmethod</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">factory</span><span class="p">(</span><span class="n">cls</span><span class="p">,</span><span class="n">global_conf</span><span class="p">,</span><span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
</span><span class='line'>      <span class="c">#print type(global_conf)</span>
</span><span class='line'>      <span class="c">#print type(kwargs)</span>
</span><span class='line'>      <span class="k">print</span> <span class="s">&#39;######filter2###########&#39;</span>
</span><span class='line'>      <span class="k">print</span> <span class="s">&#39;[DEFAULT]&#39;</span><span class="p">,</span><span class="n">global_conf</span>
</span><span class='line'>      <span class="k">print</span> <span class="s">&#39;Log Info&#39;</span><span class="p">,</span><span class="n">kwargs</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">LogFilter</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">class</span> <span class="nc">ShowStuDetail</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>  <span class="s">&#39;&#39;&#39;</span>
</span><span class='line'><span class="s">  app</span>
</span><span class='line'><span class="s">  &#39;&#39;&#39;</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">name</span><span class="p">,</span><span class="n">age</span><span class="p">):</span>
</span><span class='line'>      <span class="bp">self</span><span class="o">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">name</span>
</span><span class='line'>      <span class="bp">self</span><span class="o">.</span><span class="n">age</span> <span class="o">=</span> <span class="n">age</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">__call__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">environ</span><span class="p">,</span><span class="n">start_response</span><span class="p">):</span>
</span><span class='line'>      <span class="k">print</span> <span class="s">&#39;this is call ShowStuDetail&#39;</span>
</span><span class='line'>      <span class="c">#pprint(environ)</span>
</span><span class='line'>      <span class="c">#pprint environ</span>
</span><span class='line'>      <span class="n">start_response</span><span class="p">(</span><span class="s">&quot;200 OK&quot;</span><span class="p">,[(</span><span class="s">&quot;Content-type&quot;</span><span class="p">,</span><span class="s">&quot;text/plain&quot;</span><span class="p">)])</span>
</span><span class='line'>      <span class="n">content</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>      <span class="n">content</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">&quot;name: </span><span class="si">%s</span><span class="s"> age:</span><span class="si">%s</span><span class="se">\n</span><span class="s">&quot;</span> <span class="o">%</span> <span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">name</span><span class="p">,</span><span class="bp">self</span><span class="o">.</span><span class="n">age</span><span class="p">))</span>
</span><span class='line'>      <span class="n">content</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">&quot;**********WSGI INFO***********</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">for</span> <span class="n">k</span><span class="p">,</span><span class="n">v</span> <span class="ow">in</span> <span class="n">environ</span><span class="o">.</span><span class="n">iteritems</span><span class="p">():</span>
</span><span class='line'>          <span class="n">content</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">&#39;</span><span class="si">%s</span><span class="s">:</span><span class="si">%s</span><span class="s"> </span><span class="se">\n</span><span class="s">&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">k</span><span class="p">,</span><span class="n">v</span><span class="p">))</span>
</span><span class='line'>      <span class="k">return</span> <span class="p">[</span><span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">content</span><span class="p">)]</span> <span class="c">#return a list</span>
</span><span class='line'>
</span><span class='line'>  <span class="nd">@classmethod</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">factory</span><span class="p">(</span><span class="n">cls</span><span class="p">,</span><span class="n">global_conf</span><span class="p">,</span><span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
</span><span class='line'>      <span class="c">#self.name = kwargs[&#39;name&#39;]</span>
</span><span class='line'>      <span class="c">#self.age = kwargs[&#39;age&#39;]</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">ShowStuDetail</span><span class="p">(</span><span class="n">kwargs</span><span class="p">[</span><span class="s">&#39;name&#39;</span><span class="p">],</span><span class="n">kwargs</span><span class="p">[</span><span class="s">&#39;age&#39;</span><span class="p">])</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">class</span> <span class="nc">ShowVersion</span><span class="p">(</span><span class="nb">object</span><span class="p">):</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>  <span class="s">&#39;&#39;&#39;</span>
</span><span class='line'><span class="s">  app</span>
</span><span class='line'><span class="s">  &#39;&#39;&#39;</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">version</span><span class="p">):</span>
</span><span class='line'>      <span class="bp">self</span><span class="o">.</span><span class="n">version</span> <span class="o">=</span> <span class="n">version</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">__call__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span><span class="n">environ</span><span class="p">,</span><span class="n">start_response</span><span class="p">):</span>
</span><span class='line'>      <span class="k">print</span> <span class="s">&#39;this is call ShowVersion&#39;</span>
</span><span class='line'>      <span class="n">req</span> <span class="o">=</span> <span class="n">Request</span><span class="p">(</span><span class="n">environ</span><span class="p">)</span>
</span><span class='line'>      <span class="n">res</span> <span class="o">=</span> <span class="n">Response</span><span class="p">()</span>
</span><span class='line'>      <span class="n">res</span><span class="o">.</span><span class="n">status</span> <span class="o">=</span> <span class="s">&#39;200 OK&#39;</span>
</span><span class='line'>      <span class="n">res</span><span class="o">.</span><span class="n">content_type</span> <span class="o">=</span> <span class="s">&quot;text/plain&quot;</span>
</span><span class='line'>      <span class="n">content</span> <span class="o">=</span> <span class="p">[]</span>
</span><span class='line'>      <span class="c">#pprint(req.environ)</span>
</span><span class='line'>      <span class="n">content</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">&quot;</span><span class="si">%s</span><span class="se">\n</span><span class="s">&quot;</span> <span class="o">%</span> <span class="bp">self</span><span class="o">.</span><span class="n">version</span><span class="p">)</span>
</span><span class='line'>      <span class="n">content</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">&quot;*********WSGI INFO*********&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="k">for</span> <span class="n">k</span><span class="p">,</span><span class="n">v</span> <span class="ow">in</span> <span class="n">environ</span><span class="o">.</span><span class="n">iteritems</span><span class="p">():</span>
</span><span class='line'>          <span class="n">content</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="s">&#39;</span><span class="si">%s</span><span class="s">:</span><span class="si">%s</span><span class="se">\n</span><span class="s">&#39;</span> <span class="o">%</span> <span class="p">(</span><span class="n">k</span><span class="p">,</span><span class="n">v</span><span class="p">))</span>
</span><span class='line'>      <span class="n">res</span><span class="o">.</span><span class="n">body</span> <span class="o">=</span> <span class="s">&#39;</span><span class="se">\n</span><span class="s">&#39;</span><span class="o">.</span><span class="n">join</span><span class="p">(</span><span class="n">content</span><span class="p">)</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">res</span><span class="p">(</span><span class="n">environ</span><span class="p">,</span><span class="n">start_response</span><span class="p">)</span>
</span><span class='line'>  <span class="nd">@classmethod</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">factory</span><span class="p">(</span><span class="n">cls</span><span class="p">,</span><span class="n">global_conf</span><span class="p">,</span><span class="o">**</span><span class="n">kwargs</span><span class="p">):</span>
</span><span class='line'>      <span class="c">#self.version = kwargs[&#39;version&#39;]</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">ShowVersion</span><span class="p">(</span><span class="n">kwargs</span><span class="p">[</span><span class="s">&#39;version&#39;</span><span class="p">])</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="k">if</span> <span class="o">&lt;</span><span class="n">strong</span><span class="o">&gt;</span><span class="n">name</span><span class="o">&lt;/</span><span class="n">strong</span><span class="o">&gt;</span> <span class="o">==</span> <span class="s">&#39;&lt;strong&gt;main&lt;/strong&gt;&#39;</span><span class="p">:</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span> <span class="n">config</span> <span class="o">=</span> <span class="s">&quot;python_paste.ini&quot;</span>
</span><span class='line'> <span class="n">appname</span> <span class="o">=</span> <span class="s">&quot;common&quot;</span>
</span><span class='line'> <span class="n">wsgi_app</span> <span class="o">=</span> <span class="n">loadapp</span><span class="p">(</span><span class="s">&quot;config:</span><span class="si">%s</span><span class="s">&quot;</span> <span class="o">%</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">abspath</span><span class="p">(</span><span class="n">config</span><span class="p">),</span> <span class="n">appname</span><span class="p">)</span>
</span><span class='line'> <span class="n">server</span> <span class="o">=</span> <span class="n">make_server</span><span class="p">(</span><span class="s">&#39;localhost&#39;</span><span class="p">,</span><span class="mi">7070</span><span class="p">,</span><span class="n">wsgi_app</span><span class="p">)</span>
</span><span class='line'> <span class="n">server</span><span class="o">.</span><span class="n">serve_forever</span><span class="p">()</span>
</span><span class='line'> <span class="k">pass</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<p>在程序中，对于web请求的处理，我分别采用了webob和普通WSGI定义的方式，后续我会补上webob的使用。</p>

<h3>2.3 结果</h3>

<p>先从服务端结果分析一下调用流程：</p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Ubuntu:~/python$ python python_paste.py&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h6>filter1&lt;/h6>
</span><span class='line'>
</span><span class='line'>&lt;p>global_conf type: &lt;type 'dict'>
</span><span class='line'>[DEFAULT] {'school': 'Commuication and Information', 'company': 'UESTC', 'here': '/home/wachang/python', '&lt;strong>file&lt;/strong>': '/home/wachang/python/python_paste.ini'}
</span><span class='line'>kwargs type: &lt;type 'dict'>
</span><span class='line'>Auth Info {'passwd': 'admin', 'user': 'admin'}&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;h6>filter2&lt;/h6>
</span><span class='line'>
</span><span class='line'>&lt;p>[DEFAULT] {'school': 'Commuication and Information', 'company': 'UESTC', 'here': '/home/wachang/python', '&lt;strong>file&lt;/strong>': '/home/wachang/python/python_paste.ini'}
</span><span class='line'>Log Info {'date': '20121120'}
</span><span class='line'>以上是PD载入应用时，调用filter的factory方法输出的结果，可以看到，此读出了相关的变量信息。&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>this is call ShowVersion
</span><span class='line'>localhost - - [21/Nov/2012 13:23:40] "GET / HTTP/1.1" 200 2938
</span><span class='line'>this is call ShowVersion
</span><span class='line'>localhost - - [21/Nov/2012 13:23:40] "GET /favicon.ico HTTP/1.1" 200 2889
</span><span class='line'>以上是接收/请求，因为没有使用filter，直接交予showversion应用处理，并返回。&lt;/p>
</span><span class='line'>
</span><span class='line'>&lt;p>this is Auth call filter1
</span><span class='line'>This is call LogFilter filter2
</span><span class='line'>this is call ShowStuDetail
</span><span class='line'>localhost - - [21/Nov/2012 13:24:23] "GET /detail HTTP/1.1" 200 3016
</span><span class='line'>this is call ShowVersion
</span><span class='line'>localhost - - [21/Nov/2012 13:24:24] "GET /favicon.ico HTTP/1.1" 200 2889
</span><span class='line'>filter的调用时重点啊，可以看到，调用的顺序和pipeline中一样。最后才调用应用。</span></code></pre></td></tr></table></div></figure></notextile></div></p>

<blockquote><p>需要继续折腾的话，就看看<a href="http://docs.webob.org/en/latest/do-it-yourself.html">webob:do-it-yourselfrself</a></p></blockquote>
]]></content>
  </entry>
  
</feed>
